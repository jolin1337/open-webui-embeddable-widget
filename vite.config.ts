import { defineConfig } from 'vite';
import { svelte, vitePreprocess } from '@sveltejs/vite-plugin-svelte';

export default defineConfig({
	plugins: [
		svelte({
			preprocess: vitePreprocess(),
			compilerOptions: {
				runes: true // Explicitly enable runes mode
			}
			// Inline CSS into the JavaScript bundle
			// For Svelte 5, styles are generally encapsulated.
			// emitCss: false might be needed if CSS files are generated by default.
			// Svelte 5 with vite-plugin-svelte typically handles CSS encapsulation well.
			// If a separate CSS file is still generated, uncommenting emitCss: false can help.
		})
	],
	build: {
		lib: {
			entry: 'src/lib/index.ts', // Our library entry point
			name: 'ChatWidget',        // The global variable name for UMD builds (not primary for ESM)
			formats: ['es'],           // Output ES Module format
			fileName: () => 'ChatWidget.js' // Output filename
		},
		outDir: 'dist', // Output directory
		emptyOutDir: true, // Clean the output directory before build
		// We are not externalizing Svelte to make the widget self-contained.
		// If bundle size is critical and Svelte is expected to be provided by the host,
		// externalizing svelte and svelte/store would be an option:
		// rollupOptions: {
		//   external: ['svelte', 'svelte/store'],
		//   output: {
		//     globals: {
		//       svelte: 'Svelte',
		//       'svelte/store': 'SvelteStore'
		//     }
		//   }
		// }
	}
});
